based subtitle stream.

       Example: labeled filtergraph outputs

	       ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex "[1:v]hue=s=0[outv];overlay;aresample" \
		      -map '[outv]' -an        out1.mp4 \
					       out2.mkv \
		      -map '[outv]' -map 1:a:0 out3.mkv

       The above command will fail, as the output pad labelled "[outv]" has been mapped twice.	None of
       the output files shall be processed.

	       ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex "[1:v]hue=s=0[outv];overlay;aresample" \
		      -an	 out1.mp4 \
				 out2.mkv \
		      -map 1:a:0 out3.mkv

       This command above will also fail as the hue filter output has a label, "[outv]", and hasn't been
       mapped anywhere.

       The command should be modified as follows,

	       ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex "[1:v]hue=s=0,split=2[outv1][outv2];overlay;aresample" \
		       -map '[outv1]' -an	 out1.mp4 \
						 out2.mkv \
		       -map '[outv2]' -map 1:a:0 out3.mkv

       The video stream from B.mp4 is sent to the hue filter, whose output is cloned once using the split
       filter, and both outputs labelled. Then a copy each is mapped to the first and third output files.

       The overlay filter, requiring two video inputs, uses the first two unused video streams. Those are
       the streams from A.avi and C.mkv. The overlay output isn't labelled, so it is sent to the first
       output file out1.mp4, regardless of the presence of the "-map" option.

       The aresample filter is sent the first unused audio stream, that of A.avi. Since this filter
       output is also unlabelled, it too is mapped to the first output file. The presence of "-an" only
       suppresses automatic or manual stream selection of audio streams, not outputs sent from
       filtergraphs. Both these mapped streams shall be ordered before the mapped stream in out1.mp4.

       The video, audio and subtitle streams mapped to "out2.mkv" are entirely determined by automatic
       stream selection.

       out3.mkv consists of the cloned video output from the hue filter and the first audio stream from
       B.mp4.

OPTIONS
       All the numerical options, if not specified otherwise, accept a string representing a number as
       input, which may be followed by one of the SI unit prefixes, for example: 'K', 'M', or 'G'.

       If 'i' is appended to the SI unit prefix, the complete prefix will be interpreted as a unit prefix
       for binary multiples, which are based on powers of 1024 instead of powers of 1000. Appending 'B'
       to the SI unit prefix multiplies the value by 8. This allows using, for example: 'KB', 'MiB', 'G'
       and 'B' as number suffixes.

       Options which do not take arguments are boolean options, and set the corresponding value to true.
       They can be set to false by prefixing the option name with "no". For example using "-nofoo" will
       set the boolean option with name "foo" to false.

   Stream specifiers
       Some options are applied per-stream, e.g. bitrate or codec. Stream specifiers are used to
       precisely specify which stream(s) a given option belongs to.

       A stream specifier is a string generally appended to the option name and separated from it by a
       colon. E.g. "-codec:a:1 ac3" contains the "a:1" stream specifier, which matches the second audio
       stream. Therefore, it would select the ac3 codec for the second audio stream.

       A stream specifier can match several streams, so that the option is applied to all of them. E.g.
       the stream specifier in "-b:a 128k" matches all audio streams.

       An empty stream specifier matches all streams. For example, "-codec copy" or "-codec: copy" would
       copy all the streams without reencoding.

       Possible forms of stream specifiers are:

       stream_index
	   Matches the stream with this index. E.g. "-threads:1 4" would set the thread count for the
	   second stream to 4. If stream_index is used as an additional stream specifier (see below),
	   then it selects stream number stream_index from the matching streams. Stream numbering is
	   based on the order of the streams as detected by libavformat except when a program ID is also
	   specified. In this case it is based on the ordering of the streams in the program.

       stream_type[:additional_stream_specifier]
	   stream_type is one of following: 'v' or 'V' for video, 'a' for audio, 's' for subtitle, 'd'
	   for data, and 't' for attachments. 'v' matches all video streams, 'V' only matches video
	   streams which are not attached pictures, video thumbnails or cover arts. If
	   additional_stream_specifier is used, then it matches streams which both have this type and
	   match the additional_stream_specifier. Otherwise, it matches all streams of the specified
	   type.

       p:program_id[:additional_stream_specifier]
	   Matches streams which are in the program with the id program_id. If
	   additional_stream_specifier is used, then it matches streams which both are part of the
	   program and match the additional_stream_specifier.

       #stream_id or i:stream_id
	   Match the stream by stream id (e.g. PID in MPEG-TS container).

       m:key[:value]
	   Matches streams with the metadata tag key having the specified value. If value is not given,
	   matches streams that contain the given tag with any value.

       u   Matches streams with usable configuration, the codec must be defined and the essential
	   information such as video dimension or audio sample rate must be present.

	   Note that in ffmpeg, matching by metadata will only work properly for input files.

   Generic options
       These options are shared amongst the ff* tools.

       -L  Show license.

       -h, -?, -help, --help [arg]
	   Show help. An optional parameter may be specified to print help about a specific item. If no
	   argument is specified, only basic (non advanced) tool options are shown.

	   Possible values of arg are:

	   long
	       Print advanced tool options in addition to the basic tool options.

	   full
	       Print complete list of options, including shared and private options for encod